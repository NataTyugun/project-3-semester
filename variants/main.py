import requests #–º–æ–¥—É–ª—å, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∞—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é —Å —Å–∞–π—Ç–æ–≤
from dateutil.parser import parse
import sqlite3 #–º–æ–¥—É–ª—å –¥–ª—è —Å–≤—è–∑–∏ —Å –±–¥
from icrawler.builtin import GoogleImageCrawler #–º–æ–¥—É–ª—å –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∫–∞—Ä—Ç–∏–Ω–æ–∫ –∏–∑ –≥—É–≥–ª–∞
import os

def main():
      #–¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è

      user_city = input('–í–≤–µ–¥–∏—Ç–µ –≥–æ—Ä–æ–¥: ')
      user_date = parse(input('–í–≤–µ–¥–∏—Ç–µ –¥–∞—Ç—É (–ø—Ä–æ–≥–Ω–æ–∑ –Ω–∞ 7 –¥–Ω–µ–π!): ')).strftime('%Y-%m-%d')
      user_gender = input('–í—ã–±–µ—Ä–∏—Ç–µ –º\–∂: ')
      user_activity = input('–í—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–æ–≥—É–ª–∫–∞\—Å–ø–æ—Ä—Ç\–µ–∂–µ–¥–Ω–µ–≤–Ω—ã–µ –¥–µ–ª–∞: ')

      city_name = get_weather(user_city, user_date)[0]
      info_weather = get_weather(user_city, user_date)[1]

      name_city_and_date = f'–í –≥–æ—Ä–æ–¥–µ {city_name} {parse(user_date).strftime("%d.%m.%y").lower()} –±—É–¥–µ—Ç {info_weather["weather"]["description"].lower()}'
      weather = f'–°—Ä–µ–¥–Ω—è—è —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ {round(info_weather["temp"])} C | —Å–∫–æ—Ä–æ—Å—Ç—å –≤–µ—Ç—Ä–∞ {round(info_weather["wind_spd"])} –º/—Å'
      recomendation_clouses = f'–†–µ–∫–æ–º–µ–Ω–¥—É–µ–º –Ω–∞–¥–µ—Ç—å {get_clouses(user_city, user_date, user_gender, user_activity)[0][0]}'
      other_recomendation_clouses = f'{", ".join(recomendation(user_date, user_city))}'

      image(user_city, user_date, user_gender, user_activity)

      return (f'üåé {name_city_and_date}'
              f'\nüåé {weather}'
              f'\nüåé {recomendation_clouses}'
              f'\nüåé {other_recomendation_clouses}')

# —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ —Å —Å–∞–π—Ç–∞ –ø–æ–≥–æ–¥—ã, –∏—Å—Ö–æ–¥—è –∏–∑ –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –Ω–∞–∑–≤–∞–Ω–∏–µ –≥–æ—Ä–æ–¥–∞ –∏ —Å–≤–µ–¥–µ–Ω–∏—è –æ –ø–æ–≥–æ–¥–µ

def get_weather(user_city, user_date):
      r = requests.get(f'https://api.weatherbit.io/v2.0/forecast/daily?city={user_city},RU&key=3a37beb19b3b4d8981d9e4911cd60f77&lang=ru&days=7').json() # —Å —Å–∞–π—Ç–∞ –ø–æ–ª—É—á–∞–µ–º –ø—Ä–æ–≥–Ω–æ–∑ –ø–æ–≥–æ–¥—ã –Ω–∞ 7 –¥–Ω–µ–π –≤ –≤–≤–µ–¥–µ–Ω–Ω–æ–º –≥–æ—Ä–æ–¥–µ –≤ —Ñ–æ—Ä–º–∞—Ç–µ json, —Ç—Ç–æ–ª—å–∫–æ RU –≥–æ—Ä–æ–¥–∞

      info_weather = {} # –∏–∑ 7 –¥–Ω–µ–π –≤—ã–±–∏—Ä–∞–µ–º —Ç–æ—Ç, –∫–æ—Ç–æ—Ä—ã–π –Ω—É–∂–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
      for item in r["data"]:
            if str(item['datetime']) == user_date:
                  info_weather = item

      return [r["city_name"], info_weather]

# —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π –∏—Å—Ö–æ–¥—è –∏–∑ –ø–æ–≥–æ–¥—ã, –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –æ—Å–æ–±—ã–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏

def recomendation(user_date, user_city):
      info_weather = get_weather(user_city, user_date)[1]

      # –∏–Ω–∏—Ü–∏–ª–∏–∑–∞—Ü–∏—è –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö, –∫–æ—Ç–æ—Ä—ã–µ —Ö—Ä–∞–Ω—è—Ç –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Å–æ–≤–µ—Ç—ã
      rec_wind = ''
      rec_rain = ''
      rec_precip = ''
      rec_uv = ''
      rec_snow = ''
      recomendation = []

      if info_weather['wind_spd'] >= 15:
            rec_wind = '–ù–µ —Ä–µ–∫–æ–º–º–µ–Ω–¥—É–µ—Ç—Å—è –≤—ã—Ö–æ–¥–∏—Ç—å –Ω–∞ —É–ª–∏—Ü—É –∏–∑-–∑–∞ —Å–∏–ª—å–Ω–æ–≥–æ –≤–µ—Ç—Ä–∞'
      elif info_weather['wind_spd'] > 8 and info_weather['wind_spd'] < 15:
            rec_wind = '–ù–∞ —É–ª–∏—Ü–µ –≤–µ—Ç–µ—Ä, —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –Ω–∞–¥–µ—Ç—å —à–∞–ø–∫—É'

      if info_weather['pop'] > 80:
            rec_rain = '–û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –≤–æ–∑—å–º–∏ –∑–æ–Ω—Ç –∏–ª–∏ –¥–æ–∂–¥–µ–≤–∏–∫'
      elif info_weather['pop'] > 30 and info_weather['pop'] < 81:
            rec_rain = '–í–æ–∑–º–æ–∂–Ω–æ —Å–µ–≥–æ–¥–Ω—è –ø–æ–Ω–∞–¥–æ–±–∏—Ç—Å—è –∑–æ–Ω—Ç'

      if info_weather['precip'] > 30:
            rec_precip = '–ù–∞ —É–ª–∏—Ü–µ –≥–ª—É–±–æ–∫–∏–µ –ª—É–∂–∏, –Ω–∞–¥–µ–Ω—å—Ç–µ –Ω–µ–ø—Ä–æ–º–æ–∫–∞–µ–º—É—é –æ–±—É–≤—å'

      if  info_weather['uv'] > 4 and info_weather < 8:
            rec_uv = '–ù–∞ —É–ª–∏—Ü–µ —Å–æ–ª–Ω–µ—á–Ω–æ, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ spf –æ—Ç 15 –∏ –≤–æ–∑—å–º–∏—Ç–µ —Å–æ–ª–Ω–µ—á–Ω—ã–µ –æ—á–∫–∏'
      elif info_weather['uv'] >= 8:
            rec_uv = '–ù–∞ —É–ª–∏—Ü–µ —Å–∏–ª—å–Ω–æ–µ —Å–æ–ª–Ω—Ü–µ, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ spf –æ—Ç 30, –≤–æ–∑—å–º–∏—Ç–µ —Å–æ–ª–Ω–µ—á–Ω—ã–µ –æ—á–∫–∏ –∏ –≥–æ–ª–æ–≤–Ω–æ–π —É–±–æ—Ä'

      if info_weather['snow_depth'] >= 200:
            rec_snow = '–ù–∞ —É–ª–∏—Ü–µ –≥–ª—É–±–æ–∫–∏–µ —Å—É–≥—Ä–æ–±—ã, –Ω–∞–¥–µ–Ω—å—Ç–µ –≤—ã—Å–æ–∫—É—é –æ–±—É–≤—å'

      for i in [rec_wind, rec_rain, rec_precip, rec_uv, rec_snow]:
            if i != '':
                  recomendation.append(i)

      return recomendation #–≤—ã–≤–æ–¥–∏—Ç –æ—Å–æ–±—ã–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –¥–ª—è –¥–Ω—è

# —Ñ—É–Ω–∫—Ü–∏—è, –∫–æ—Ç–æ—Ä–∞—è –æ–±—Ä–∞—â–∞–µ—Ç—Å—è –∫ –ë–î, –≤ –∫–æ—Ç–æ—Ä–æ–π —Ö—Ä–∞–Ω–∏—Ç—Å—è –ø–æ–¥–±–æ—Ä–∫–∞ –æ–¥–µ–∂–¥—ã, –∏—Å—Ö–æ–¥—è –∏–∑ —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä—ã, –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—é –æ–¥–µ–∂–¥—ã

def get_clouses(user_city, user_data, user_gender, user_activity):
      temp = round(get_weather(user_city, user_data)[1]["temp"])

      connect = sqlite3.connect('database_new.db')  #–¥–µ–ª–∞–µ–º –∑–∞–ø—Ä–æ—Å –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
      cursor = connect.cursor()

      if user_gender == '–∂':
            if user_activity == '—Å–ø–æ—Ä—Ç':
                  cursor.execute('''SELECT female_sport FROM database_new WHERE temp = ?''', [temp])
                  recomendation_clouses = cursor.fetchall()
                  connect.close()
            if user_activity == '–ø—Ä–æ–≥—É–ª–∫–∞':
                  cursor.execute('''SELECT female_walk FROM database_new WHERE temp = ?''', [temp])
                  recomendation_clouses = cursor.fetchall()
                  connect.close()
            if user_activity == '–µ–∂–µ–¥–Ω–µ–≤–Ω—ã–µ –¥–µ–ª–∞':
                  cursor.execute('''SELECT female_day FROM database_new WHERE temp = ?''', [temp])
                  recomendation_clouses = cursor.fetchall()
                  connect.close()

      if user_gender == '–º':
            if user_activity == '—Å–ø–æ—Ä—Ç':
                  cursor.execute('''SELECT male_sport FROM database_new WHERE temp = ?''', [temp])
                  recomendation_clouses = cursor.fetchall()
                  connect.close()
            if user_activity == '–ø—Ä–æ–≥—É–ª–∫–∞':
                  cursor.execute('''SELECT male_walk FROM database_new WHERE temp = ?''', [temp])
                  recomendation_clouses = cursor.fetchall()
                  connect.close()
            if user_activity == '–µ–∂–µ–¥–Ω–µ–≤–Ω—ã–µ –¥–µ–ª–∞':
                  cursor.execute('''SELECT male_day FROM database_new WHERE temp = ?''', [temp])
                  recomendation_clouses = cursor.fetchall()
                  connect.close()

      return recomendation_clouses

# —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∫–∞—Ä—Ç–∏–Ω–æ–∫ –ø–æ –∑–∞–ø—Ä–æ—Å—É

def image(user_city, user_date, user_gender, user_activity):

      # –ø–æ–ª—É—á–µ–Ω–∏–µ —Ä–µ–∫–æ–º–º–µ–Ω–¥–∞—Ü–∏–∏ –æ–± –æ–¥–µ–∂–¥–µ
      clouses = get_clouses(user_city, user_date, user_gender, user_activity)

      os.chdir("autfits") # –∏–∑–º–µ–Ω–µ–Ω–∏–µ —Ç–µ–∫—É—â–µ–≥–æ –∫–∞—Ç–∞–ª–æ–≥–∞ –Ω–∞ autfits

      for item in os.listdir(): # —É–¥–∞–ª–µ–Ω–∏–µ —Å—Ç—Ä–∞—Ä—ã—Ö –ø–∞–ø–æ–∫ –∏–∑ –ø–∞–ø–∫–∏
            for item2 in os.listdir(item):
                  os.remove(item + '/' + item2)
            os.rmdir(item)

      for item in clouses[0][0].split(','): # –°–æ–∑–¥–∞–µ–º –ø–∞–ø–∫–∏
            item = item.strip().replace("/", ", ") # —É–¥–∞–ª—è–µ–º –ø—Ä–æ–±–µ–ª—ã –∏ –∑–∞–º–µ–Ω—è–µ–º —Å–ª–µ—à
            os.mkdir(item) # —Å–æ–∑–¥–∞–µ–º –ø—É—Å—Ç—É—é –ø–∞–ø–∫—É –≤ —Ç–µ–∫—É—â–µ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏
            os.chdir(item) # –∏–∑–º–µ–Ω–µ–Ω–∏–µ —Ç–µ–∫—É—â–µ–≥–æ –∫–∞—Ç–∞–ª–æ–≥–∞ –Ω–∞ item
            temp_dir = os.getcwd() # –∑–∞–ø–∏—Å—å —Ç–µ–∫—É—â–µ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –≤ –≤—Ä–µ–º–µ–Ω–Ω—É—é –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é

            google_crawler = GoogleImageCrawler(downloader_threads=1, storage={'root_dir': temp_dir})  # –¥–æ–±–∞–≤–ª—è–µ–º –≤ —Ç–µ–∫—É—â—É—é –ø–∞–ø–∫—É –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è, storage - —Ä–∞—Å–ø–æ–ª–æ–∂–µ–Ω–∏–µ –ø–∞–ø–∫–∏ –∏—Ç–æ–≥–æ–≤–æ–≥–æ —Ö—Ä–∞–Ω–µ–Ω–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
            google_crawler.crawl(keyword=f'{"–∂–µ–Ω—Å–∫–∏–µ" if user_gender == "–∂" else "–º—É–∂—Å–∫–∏–µ"} {item}', max_num=1)  #keyword - –∑–∞–ø—Ä–æ—Å –≤ –≥—É–≥–ª –∏–∑—Å–æ–±—Ä–∞–∂–µ–Ω–∏—è, max_num - –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–∫–∞—á–∏–≤–∞–µ–º—ã—Ö –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π

            os.chdir("..") # –≤–æ–∑–≤—Ä–≤—â–∞–µ–º—Å—è –≤ autfits

      os.chdir("..")
      return 

print(main())
